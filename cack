#!/usr/bin/env ruby-local-exec
#
# cack - crap ack
#
# Rails logs multiple lines per request.  This script filters the given log file
# for request blocks matching the given pattern.
#
# It writes the results to an output file (instead of standard out / pipe / etc).

if ARGV.length != 2
  puts "Usage: cack PATTERN LOGFILE"
  exit 1
end

pattern = /#{ARGV[0]}/
input = ARGV[1]
output = "#{input}.out"

def blank?(line)
  line == "\n"
end

def write(destination, buffer)
  destination.puts *buffer
end

def matches?(buffer, pattern)
  !buffer.grep(pattern).empty?
end


buffer = []
seen_blank_line = false

open(output, 'w') do |out|
  open(input).each do |line|
    buffer << line

    if blank?(line)
      if seen_blank_line
        write(out, buffer) if matches?(buffer, pattern)
        buffer = []
        seen_blank_line = false
      else
        seen_blank_line = true
      end
    end
  end
  write(out, buffer) if matches?(buffer, pattern)
end

#!/bin/sh -e

# Usage: git-promote <branch>
#
# Promote current branch (which must be either master or staging) to <branch>
# (which must be staging or production).  You can also promote master directly
# to production, though it will still flow through staging.
#
# Code flows from master => staging => production.

TARGET="$1"
BRANCH=$(git name-rev HEAD | cut -d' ' -f2)

test "$BRANCH" != "master" -a "$BRANCH" != "staging" && {
  echo "$(basename $0): you must be on master or staging." 1>&2
  exit 1
}

test "$TARGET" != "staging" -a "$TARGET" != "production" && {
  echo "$(basename $0): you must promote to staging or production." 1>&2
  exit 1
}

# target, current branch
function checkout_and_merge() {
  git checkout -q "$1" || {
    echo "$(basename $0): could not check out target cleanly." 1>&2
    exit 1
  }
  git merge "$2"
}

test "$BRANCH" = "master" -a "$TARGET" = "production" && {
  checkout_and_merge "staging" "$BRANCH"
  BRANCH="staging"
  echo ""
}

checkout_and_merge "$TARGET" "$BRANCH"
